{"version":3,"sources":["jquery.barrating.js"],"names":["$","BarRating","root","window","global","self","this","wrapElement","classes","options","wrapperClass","theme","push","$elem","wrap","class","join","unwrapElement","unwrap","findInitialOption","option","initialRating","saveDataOnElement","$opt","data","userOptions","currentRatingValue","val","currentRatingText","text","originalRatingValue","originalRatingText","deselectable","find","removeDataOnElement","removeData","buildWidget","$w","each","html","$a","$span","href","data-rating-value","data-rating-text","append","showSelectedRating","reverse","addClass","readonly","nextAllorPreviousAll","setSelectFieldValue","value","prop","change","parent","applyStyle","removeClass","attachClickHandler","$all","on","event","preventDefault","attr","hasClass","onSelect","call","attachMouseEnterHandler","mouseenter","attachMouseLeaveHandler","$widget","mouseleave","fastClicks","stopPropagation","click","disableClicks","show","insertAfter","hide","set","clear","onClear","destroy","off","remove","onDestroy","prototype","init","elem","extend","fn","barrating","defaults","method","plugin","is","error","hasOwnProperty","next","showValues","jQuery"],"mappings":"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","file":"jquery.barrating.min.js","sourcesContent":["/**\r\n * jQuery Bar Rating Plugin v1.1.0\r\n *\r\n * http://github.com/antennaio/jquery-bar-rating\r\n *\r\n * Copyright (c) 2012-2015 Kazik Pietruszewski\r\n *\r\n * Dual licensed under the MIT and GPL licenses:\r\n * http://www.opensource.org/licenses/mit-license.php\r\n * http://www.gnu.org/licenses/gpl.html\r\n */\r\n(function ($) {\r\n    var BarRating, root;\r\n\r\n    root = typeof window !== \"undefined\" && window !== null ? window : global;\r\n\r\n    root.BarRating = BarRating = (function() {\r\n\r\n        function BarRating() {\r\n            var self = this;\r\n\r\n            // wrap element in a wrapper div\r\n            var wrapElement = function() {\r\n                var classes = [self.options.wrapperClass];\r\n\r\n                if (self.options.theme !== '') {\r\n                    classes.push('br-theme-' + self.options.theme);\r\n                }\r\n                \r\n                self.$elem.wrap($('<div />', {\r\n                    'class': classes.join(' ')\r\n                }));\r\n            };\r\n\r\n            // unwrap element\r\n            var unwrapElement = function() {\r\n                self.$elem.unwrap();\r\n            };\r\n\r\n            // return initial option\r\n            var findInitialOption = function() {\r\n                var option;\r\n\r\n                if (self.options.initialRating) {\r\n                    option = $('option[value=\"' + self.options.initialRating  + '\"]', self.$elem);\r\n                } else {\r\n                    option = $('option:selected', self.$elem);\r\n                }\r\n\r\n                return option;\r\n            };\r\n\r\n            // save data on element\r\n            var saveDataOnElement = function() {\r\n                var $opt = findInitialOption();\r\n\r\n                self.$elem.data('barrating', {\r\n\r\n                    userOptions: self.options,\r\n\r\n                    // initial rating based on the OPTION value\r\n                    currentRatingValue: $opt.val(),\r\n                    currentRatingText: ($opt.data('html')) ? $opt.data('html') : $opt.text(),\r\n\r\n                    // rating will be restored by calling clear method\r\n                    originalRatingValue: $opt.val(),\r\n                    originalRatingText: ($opt.data('html')) ? $opt.data('html') : $opt.text()\r\n\r\n                });\r\n\r\n                // first OPTION empty - allow deselecting of ratings\r\n                self.$elem.data('barrating').deselectable =\r\n                    (!self.$elem.find('option:first').val()) ? true : false;\r\n            };\r\n\r\n            // remove data on element\r\n            var removeDataOnElement = function() {\r\n                self.$elem.removeData('barrating');\r\n            };\r\n\r\n            // build widget and return jQuery element\r\n            var buildWidget = function() {\r\n                var $w = $('<div />', { 'class': 'br-widget' });\r\n\r\n                // create A elements that will replace OPTIONs\r\n                self.$elem.find('option').each(function() {\r\n                    var val, text, html, $a, $span;\r\n\r\n                    val = $(this).val();\r\n\r\n                    // create ratings - but only if val is defined\r\n                    if (val) {\r\n                        text = $(this).text();\r\n                        html = $(this).data('html');\r\n                        if (html) { text = html; }\r\n\r\n                        $a = $('<a />', { 'href': '#', 'data-rating-value': val, 'data-rating-text': text });\r\n                        $span = $('<span />', { 'html': (self.options.showValues) ? text : '' });\r\n\r\n                        $w.append($a.append($span));\r\n                    }\r\n\r\n                });\r\n\r\n                // append .br-current-rating div to the widget\r\n                if (self.options.showSelectedRating) {\r\n                    $w.append($('<div />', { 'text': '', 'class': 'br-current-rating' }));\r\n                }\r\n\r\n                // additional classes for the widget\r\n                if (self.options.reverse) {\r\n                    $w.addClass('br-reverse');\r\n                }\r\n\r\n                if (self.options.readonly) {\r\n                    $w.addClass('br-readonly');\r\n                }\r\n\r\n                return $w;\r\n            };\r\n\r\n            // return a jQuery function name depending on the 'reverse' setting\r\n            var nextAllorPreviousAll = function() {\r\n                if (self.options.reverse) {\r\n                    return 'nextAll';\r\n                } else {\r\n                    return 'prevAll';\r\n                }\r\n            };\r\n\r\n            // set the value of the select field\r\n            var setSelectFieldValue = function(value) {\r\n                // change selected OPTION in the select field (hidden)\r\n                self.$elem.find('option[value=\"' + value + '\"]').prop('selected', true);\r\n                self.$elem.change();\r\n            };\r\n\r\n            // display the currently selected rating\r\n            var showSelectedRating = function(text) {\r\n                // text undefined?\r\n                text = text ? text : self.$elem.data('barrating').currentRatingText;\r\n\r\n                // update .br-current-rating div\r\n                if (self.options.showSelectedRating) {\r\n                    self.$elem.parent().find('.br-current-rating').text(text);\r\n                }\r\n            };\r\n\r\n            // apply style by setting classes on elements\r\n            var applyStyle = function($w) {\r\n                // remove classes\r\n                $w.find('a').removeClass('br-selected br-current');\r\n\r\n                // add classes\r\n                $w.find('a[data-rating-value=\"' + self.$elem.data('barrating').currentRatingValue + '\"]')\r\n                    .addClass('br-selected br-current')[nextAllorPreviousAll()]()\r\n                    .addClass('br-selected');\r\n            };\r\n\r\n            // handle click events\r\n            var attachClickHandler = function($all) {\r\n                $all.on('click', function(event) {\r\n                    var $a = $(this),\r\n                        value,\r\n                        text;\r\n\r\n                    event.preventDefault();\r\n\r\n                    $all.removeClass('br-active br-selected');\r\n                    $a.addClass('br-selected')[nextAllorPreviousAll()]()\r\n                        .addClass('br-selected');\r\n\r\n                    value = $a.attr('data-rating-value');\r\n                    text = $a.attr('data-rating-text');\r\n\r\n                    // is current and deselectable?\r\n                    if ($a.hasClass('br-current') && self.$elem.data('barrating').deselectable) {\r\n                        $a.removeClass('br-selected br-current')[nextAllorPreviousAll()]()\r\n                            .removeClass('br-selected br-current');\r\n                        value = ''; text = '';\r\n                    } else {\r\n                        $all.removeClass('br-current');\r\n                        $a.addClass('br-current');\r\n                    }\r\n\r\n                    // remember selected rating\r\n                    self.$elem.data('barrating').currentRatingValue = value;\r\n                    self.$elem.data('barrating').currentRatingText = text;\r\n\r\n                    setSelectFieldValue(value);\r\n                    showSelectedRating(text);\r\n\r\n                    // onSelect callback\r\n                    self.options.onSelect.call(\r\n                        this,\r\n                        self.$elem.data('barrating').currentRatingValue,\r\n                        self.$elem.data('barrating').currentRatingText\r\n                    );\r\n\r\n                    return false;\r\n                });\r\n            };\r\n\r\n            // handle mouseenter events\r\n            var attachMouseEnterHandler = function($all) {\r\n                $all.on({\r\n                    mouseenter: function() {\r\n                        var $a = $(this);\r\n\r\n                        $all.removeClass('br-active br-selected');\r\n                        $a.addClass('br-active')[nextAllorPreviousAll()]()\r\n                            .addClass('br-active');\r\n\r\n                        showSelectedRating($a.attr('data-rating-text'));\r\n                    }\r\n                });\r\n            };\r\n\r\n            // handle mouseleave events\r\n            var attachMouseLeaveHandler = function($all, $widget) {\r\n                $widget.on({\r\n                    mouseleave: function() {\r\n                        $all.removeClass('br-active');\r\n                        showSelectedRating();\r\n                        applyStyle($widget);\r\n                    }\r\n                });\r\n            };\r\n\r\n            // somewhat primitive way to remove 300ms click delay on touch devices\r\n            // for a more advanced solution consider setting `fastClicks` option to false\r\n            // and using a library such as fastclick (https://github.com/ftlabs/fastclick)\r\n            var fastClicks = function($all) {\r\n                $all.on('touchstart', function(event) {\r\n                    event.preventDefault();\r\n                    event.stopPropagation();\r\n\r\n                    $(this).click();\r\n                });\r\n            };\r\n\r\n            // disable clicks\r\n            var disableClicks = function($all) {\r\n                $all.on('click', function(event) {\r\n                    event.preventDefault();\r\n                });\r\n            };\r\n\r\n            this.show = function() {\r\n                var $widget, $all;\r\n\r\n                // run only once\r\n                if (self.$elem.data('barrating')) return;\r\n\r\n                // wrap element\r\n                wrapElement();\r\n\r\n                // save data\r\n                saveDataOnElement();\r\n\r\n                // build & append widget to the DOM\r\n                $widget = buildWidget();\r\n                $widget.insertAfter(self.$elem);\r\n                applyStyle($widget);\r\n\r\n                showSelectedRating();\r\n\r\n                $all = $widget.find('a');\r\n\r\n                if (self.options.fastClicks) {\r\n                    fastClicks($all);\r\n                }\r\n\r\n                if (self.options.readonly) {\r\n\r\n                    // do not react to click events if rating is read-only\r\n                    disableClicks($all);\r\n\r\n                } else {\r\n\r\n                    // attach click event handler\r\n                    attachClickHandler($all);\r\n\r\n                    // attach mouseenter event handler\r\n                    attachMouseEnterHandler($all);\r\n\r\n                     // attach mouseleave event handler\r\n                    attachMouseLeaveHandler($all, $widget);\r\n\r\n                }\r\n\r\n                // hide the select field\r\n                self.$elem.hide();\r\n            };\r\n\r\n            this.set = function(value) {\r\n                if (!this.$elem.find('option[value=\"' + value + '\"]').val()) return;\r\n\r\n                // set data\r\n                this.$elem.data('barrating').currentRatingValue = value;\r\n                this.$elem.data('barrating').currentRatingText = this.$elem.find('option[value=\"' + value + '\"]').text();\r\n\r\n                setSelectFieldValue(this.$elem.data('barrating').currentRatingValue);\r\n                showSelectedRating(this.$elem.data('barrating').currentRatingText);\r\n\r\n                applyStyle(this.$widget);\r\n            };\r\n\r\n            this.clear = function() {\r\n                // restore original data\r\n                this.$elem.data('barrating').currentRatingValue = this.$elem.data('barrating').originalRatingValue;\r\n                this.$elem.data('barrating').currentRatingText = this.$elem.data('barrating').originalRatingText;\r\n\r\n                setSelectFieldValue(this.$elem.data('barrating').currentRatingValue);\r\n                showSelectedRating(this.$elem.data('barrating').currentRatingText);\r\n\r\n                applyStyle(this.$widget);\r\n\r\n                // onClear callback\r\n                this.$elem.data('barrating').userOptions.onClear.call(\r\n                    this,\r\n                    this.$elem.data('barrating').currentRatingValue,\r\n                    this.$elem.data('barrating').currentRatingText\r\n                );\r\n            };\r\n\r\n            this.destroy = function() {\r\n                var value = this.$elem.data('barrating').currentRatingValue;\r\n                var text = this.$elem.data('barrating').currentRatingText;\r\n                var options = this.$elem.data('barrating').userOptions;\r\n\r\n                this.$widget.off().remove();\r\n\r\n                // remove data\r\n                removeDataOnElement();\r\n\r\n                // unwrap the element\r\n                unwrapElement();\r\n\r\n                // show the element\r\n                this.$elem.show();\r\n\r\n                // onDestroy callback\r\n                options.onDestroy.call(\r\n                    this,\r\n                    value,\r\n                    text\r\n                );\r\n            };\r\n        }\r\n\r\n        BarRating.prototype.init = function (options, elem) {\r\n            this.$elem = $(elem);\r\n            this.options = $.extend({}, $.fn.barrating.defaults, options);\r\n\r\n            return this.options;\r\n        };\r\n\r\n        return BarRating;\r\n    })();\r\n\r\n    $.fn.barrating = function (method, options) {\r\n        return this.each(function () {\r\n            var plugin = new BarRating();\r\n\r\n            // plugin works with select fields\r\n            if (!$(this).is('select')) {\r\n                $.error('Sorry, this plugin only works with select fields.');\r\n            }\r\n\r\n            // method supplied\r\n            if (plugin.hasOwnProperty(method)) {\r\n                plugin.init(options, this);\r\n                if (method === 'show') {\r\n                    return plugin.show(options);\r\n                } else {\r\n                    // plugin exists?\r\n                    if (plugin.$elem.data('barrating')) {\r\n                        plugin.$widget = $(this).next('.br-widget');\r\n                        return plugin[method](options);\r\n                    }\r\n                }\r\n\r\n            // no method supplied or only options supplied\r\n            } else if (typeof method === 'object' || !method) {\r\n                options = method;\r\n                plugin.init(options, this);\r\n                return plugin.show();\r\n\r\n            } else {\r\n                $.error('Method ' + method + ' does not exist on jQuery.barrating');\r\n            }\r\n        });\r\n    };\r\n\r\n    $.fn.barrating.defaults = {\r\n        theme:'',\r\n        initialRating:null, // initial rating\r\n        showValues:false, // display rating values on the bars?\r\n        showSelectedRating:true, // append a div with a rating to the widget?\r\n        reverse:false, // reverse the rating?\r\n        readonly:false, // make the rating ready-only?\r\n        fastClicks:true, // remove 300ms click delay on touch devices?\r\n        wrapperClass:'br-wrapper', // class applied to wrapper div\r\n        onSelect:function (value, text) {\r\n        }, // callback fired when a rating is selected\r\n        onClear:function (value, text) {\r\n        }, // callback fired when a rating is cleared\r\n        onDestroy:function (value, text) {\r\n        } // callback fired when a widget is destroyed\r\n    };\r\n\r\n    return $.fn.barrating.defaults;\r\n\r\n})(jQuery);\r\n"],"sourceRoot":"/source/"}